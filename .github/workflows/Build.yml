# from https://github.com/Repcz/Tool/blob/X/.github/workflows/Build.yml
name: Build
on:
  workflow_dispatch:  # Allows manual triggering
  schedule:           # Triggers the workflow on a schedule
    - cron: "5 0,12 * * *"

jobs:
  Build:
    runs-on: ubuntu-latest
    env:
      TZ: "Asia/Shanghai"
      SING_BOX_VERSION: "1.10.5"

    steps:
    # Step 1: Checkout the repository code
    - name: Checkout ioss Repository
      uses: actions/checkout@v4
      with:
        repository: MESSIUINIMI/ioss
        path: ioss-repo

    # Step 2: Download rule files sequentially for stability
    - name: Download Rules Sequentially
      run: |
        mkdir -p ioss-repo/Ruleset
        files=(
          "ChinaMaxNoIP.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/ChinaMaxNoIP/ChinaMaxNoIP.list"
          "Global.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Global/Global.list"
          "GlobalMedia.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/GlobalMedia/GlobalMedia.list"
          "apple-cn.list https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/apple-cn.txt"
          "AdvertisingLite.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/AdvertisingLite/AdvertisingLite.list"
          "GitHub.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/GitHub/GitHub.list"
          "ChinaIPs.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/ChinaIPs/ChinaIPs.list"
          "ChinaMedia.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/ChinaMedia/ChinaMedia.list"
          "Apple.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Apple/Apple.list"
          "JingDong.list https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/QuantumultX/JingDong/JingDong.list"
          "bilibili.list https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/QuantumultX/BiliBili/BiliBili.list"
          "Alibaba.list https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/QuantumultX/Alibaba/Alibaba.list"
          "Tencent.list https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/QuantumultX/Tencent/Tencent.list"
          "Adrules.conf https://github.com/Cats-Team/AdRules/raw/main/smart-dns.conf"
          "neodevhost.conf https://github.com/neodevpro/neodevhost/raw/master/smartdns.conf"
        )

        for item in "${files[@]}"; do
          set -- $item
          echo "Downloading: $1 from $2"
          curl -A "Mozilla/5.0" --connect-timeout 15 -f -L -o "ioss-repo/Ruleset/$1" "$2" || { echo "Download failed: $2"; exit 1; }
        done
        echo "All source files downloaded successfully."

    # Step 3: Process, Merge, and Generate Rule Files
    - name: Process, Merge, and Generate Rule Files
      run: |
        set -e
        SRC_DIR="ioss-repo/Ruleset"

        echo "Processing *.list files..."
        for file in "$SRC_DIR"/*.list; do
          if [[ ! -f "$file" || ! -s "$file" ]]; then continue; fi
          TEMP_FILE="$file.tmp"
          case "$(basename "$file")" in
            "apple-cn.list") grep '^full:' "$file" | awk -F ':' '{print "-." $2}' > "$TEMP_FILE";;
            "ChinaIPs.list") grep -E '^IP-CIDR|^IP6-CIDR' "$file" | awk -F ',' '{ gsub("IP-CIDR,|IP6-CIDR,", ""); print "blacklist-ip " $1 }' > "$TEMP_FILE";;
            *) grep -E '^HOST|^HOST-SUFFIX' "$file" | awk -F ',' '{ if ($1 == "HOST") print "-." $2; else if ($1 == "HOST-SUFFIX") print "*." $2 }' > "$TEMP_FILE";;
          esac
          if [[ -s "$TEMP_FILE" ]]; then mv "$TEMP_FILE" "$file"; else rm -f "$TEMP_FILE"; fi
        done

        echo "Generating merged .conf and .list files..."
        CONF_MERGED="$SRC_DIR/Adrulesnoedevhost.conf"
        LIST_MERGED="$SRC_DIR/Adrulesnoedevhost.list"

        awk 'BEGIN { FS = "/" } NR==FNR { if ($0 ~ /^address \// && !seen[$2]++) { lines[$2] = $0 } next } { if ($0 ~ /^address \// && !seen[$2]++) { lines[$2] = $0 } } END { for (domain in lines) { print lines[domain] } }' "$SRC_DIR/Adrules.conf" "$SRC_DIR/neodevhost.conf" | sort > "$CONF_MERGED"
        awk -F'/' '{print $2}' "$CONF_MERGED" > "$LIST_MERGED"
        echo "Generated merged files successfully."

    # Step 4: Deploy final rules to destination directory
    - name: Deploy Rules to Smartdns Directory
      run: |
        set -e
        SRC_DIR="ioss-repo/Ruleset"
        DEST_DIR="ioss-repo/Smartdns/Rules"

        echo "Deploying final rules..."
        rm -rf "$DEST_DIR"
        mkdir -p "$DEST_DIR"

        # 复制所有处理和生成好的规则文件
        cp "$SRC_DIR"/*.list "$DEST_DIR/"
        cp "$SRC_DIR"/*.conf "$DEST_DIR/"

        echo "Deployment complete. Verifying final contents:"
        ls -l "$DEST_DIR"

    # Step 5: Install and configure sing-box
    - name: Install and Configure sing-box
      run: |
        echo "Downloading and installing sing-box..."
        curl -sL -o sing-box.tar.gz "https://github.com/SagerNet/sing-box/releases/download/v${SING_BOX_VERSION}/sing-box-${SING_BOX_VERSION}-linux-amd64.tar.gz"
        tar -xzf sing-box.tar.gz
        chmod +x sing-box-${SING_BOX_VERSION}-linux-amd64/sing-box
        sudo mv sing-box-${SING_BOX_VERSION}-linux-amd64/sing-box /usr/local/bin/
        rm -rf sing-box.tar.gz sing-box-${SING_BOX_VERSION}-linux-amd64
        sing-box version

        echo "Compiling .srs rule sets..."
        for file in ioss-repo/Sing-box/ruleset/*.json; do
            sing-box rule-set compile "$file" -o "${file%.json}.srs"
        done
        rm -rf ioss-repo/Ruleset

    # Step 6: 将更新推送到 ioss 仓库
    - name: Commit and Push Updates
      run: |
        cd ioss-repo
        if [[ -n $(git status -s) ]]; then
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "${{ github.actor }}"
          git add -A
          git commit -m "Auto Update $(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')"
          git push origin main
        else
          echo "No changes to commit."
        fi

    # Step 7: 清理历史 Workflow Runs
    - name: Cleanup Workflow Runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2
